{"version":3,"sources":["data/randomMap.js","components/headerComponents/ReloadImage.js","data/particlesConfig.js","components/headerComponents/ParticlesSettings.js","components/Header.js","components/footerComponents/MapInfo.js","components/footerComponents/Sripushkar.js","components/Footer.js","components/Weather.js","components/Background.js","App.js","serviceWorker.js","index.js"],"names":["maps","require","getRandomMap","arr","map","Math","floor","random","length","randomMap","ReloadImage","onClick","newMap","props","newImage","class","className","this","style","marginLeft","icon","faRedo","Component","defaultParticlesConfig","starsConfig","covidConfig","name","particlesSettings","state","collapsed","config","particles","handleChange","value","setState","label","updateParticles","options","width","marginTop","placeholder","onChange","Header","updateImage","mapsURL","gMapsURL","region","country","newParticles","paddingLeft","paddingTop","MapInfo","href","faMapMarkerAlt","Sripushkar","faGithub","Footer","noPadding","paddingBottom","paddingRight","marginBottom","App","oldURL","mapURL","particlesConfig","particlesName","newMapURL","changeParticles","bgStyles","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","overflow","params","position","left","top","height","Background","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.18eaaed8.chunk.js","sourcesContent":["const maps = require(\"./maps.json\")\n\nfunction randomItem(arr){\n    return arr[Math.floor(Math.random() * arr.length)];\n  };\n\nexport const getRandomMap = () => {\n  let map = randomItem(maps)\n  map[\"Image URL\"] = \"http://\" + map[\"Image URL\"]\n  map[\"Google Maps URL\"] = \"http://\" + map[\"Google Maps URL\"]\n  return map\n}\n\nlet randomMap = getRandomMap()\n\nexport default randomMap\n","import React, { Component } from 'react'\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { getRandomMap } from \"../../data/randomMap\"\n\nexport default class ReloadImage extends Component {\n    onClick = () => {\n        const newMap = getRandomMap()\n        this.props.newImage(newMap[\"Image URL\"], newMap[\"Google Maps URL\"], newMap[\"Region\"], newMap[\"Country\"])\n    }\n\n    render() {        \n        return (\n            <p class=\"buttons is-right\">\n                <button className=\"button is-right\" onClick={this.onClick}>\n                    New Image\n                    <span className=\"icon\" style={{marginLeft: \"0.5%\"}}>\n                        <FontAwesomeIcon icon={faRedo}/>\n                    </span>\n                </button>\n            </p>\n        );\n    }\n}\n","export const nullConfig = {name: \"None\", particles: {}}\n\nexport const defaultParticlesConfig = {\n    \"name\": \"Snow\",\n    \"particles\": {\n        \"number\": {\n            \"value\": 160,\n            \"density\": {\n                \"enable\": false\n            }\n        },\n        \"size\": {\n            \"value\": 10,\n            \"random\": true\n        },\n        \"move\": {\n            \"direction\": \"bottom\",\n            \"out_mode\": \"out\"\n        },\n        \"line_linked\": {\n            \"enable\": false\n        }\n    },\n    \"interactivity\": {\n        \"events\": {\n            \"onclick\": {\n                \"enable\": true,\n                \"mode\": \"remove\"\n            }\n        },\n        \"modes\": {\n            \"remove\": {\n                \"particles_nb\": 10\n            }\n        }\n    }\n}\n\nexport const starsConfig = {\n    \"name\": \"Stars\",\n    \"background\": {\n      \"color\": {\n        \"value\": \"\"\n      },\n      \"image\": \"\",\n      \"position\": \"\",\n      \"repeat\": \"\",\n      \"size\": \"\",\n      \"opacity\": 1\n    },\n    \"backgroundMask\": {\n      \"cover\": {\n        \"color\": {\n          \"value\": \"#fff\"\n        },\n        \"opacity\": 1\n      },\n      \"enable\": false\n    },\n    \"detectRetina\": true,\n    \"fpsLimit\": 30,\n    \"infection\": {\n      \"cure\": false,\n      \"delay\": 0,\n      \"enable\": false,\n      \"infections\": 0,\n      \"stages\": []\n    },\n    \"interactivity\": {\n      \"detectsOn\": \"canvas\",\n      \"events\": {\n        \"onClick\": {\n          \"enable\": true,\n          \"mode\": \"repulse\"\n        },\n        \"onDiv\": {\n          \"ids\": [],\n          \"enable\": false,\n          \"mode\": [],\n          \"type\": \"circle\"\n        },\n        \"onHover\": {\n          \"enable\": true,\n          \"mode\": \"bubble\",\n          \"parallax\": {\n            \"enable\": false,\n            \"force\": 2,\n            \"smooth\": 10\n          }\n        },\n        \"resize\": true\n      },\n      \"modes\": {\n        \"attract\": {\n          \"distance\": 200,\n          \"duration\": 0.4,\n          \"speed\": 1\n        },\n        \"bubble\": {\n          \"distance\": 250,\n          \"duration\": 2,\n          \"opacity\": 0,\n          \"size\": 0\n        },\n        \"connect\": {\n          \"distance\": 80,\n          \"links\": {\n            \"opacity\": 0.5\n          },\n          \"radius\": 60\n        },\n        \"grab\": {\n          \"distance\": 400,\n          \"links\": {\n            \"opacity\": 1\n          }\n        },\n        \"push\": {\n          \"quantity\": 4\n        },\n        \"remove\": {\n          \"quantity\": 2\n        },\n        \"repulse\": {\n          \"distance\": 400,\n          \"duration\": 0.4,\n          \"speed\": 1\n        },\n        \"slow\": {\n          \"factor\": 3,\n          \"radius\": 200\n        },\n        \"trail\": {\n          \"delay\": 1,\n          \"quantity\": 1\n        }\n      }\n    },\n    \"particles\": {\n      \"collisions\": {\n        \"enable\": false,\n        \"mode\": \"bounce\"\n      },\n      \"color\": {\n        \"value\": \"#ffffff\",\n        \"animation\": {\n          \"enable\": false,\n          \"speed\": 1,\n          \"sync\": true\n        }\n      },\n      \"links\": {\n        \"blink\": false,\n        \"color\": {\n          \"value\": \"#ffffff\"\n        },\n        \"consent\": false,\n        \"distance\": 150,\n        \"enable\": false,\n        \"opacity\": 0.4,\n        \"shadow\": {\n          \"blur\": 5,\n          \"color\": {\n            \"value\": \"#00ff00\"\n          },\n          \"enable\": false\n        },\n        \"triangles\": {\n          \"enable\": false\n        },\n        \"width\": 1,\n        \"warp\": false\n      },\n      \"move\": {\n        \"angle\": 90,\n        \"attract\": {\n          \"enable\": false,\n          \"rotate\": {\n            \"x\": 600,\n            \"y\": 600\n          }\n        },\n        \"direction\": \"none\",\n        \"enable\": true,\n        \"noise\": {\n          \"delay\": {\n            \"random\": {\n              \"enable\": false,\n              \"minimumValue\": 0\n            },\n            \"value\": 0\n          },\n          \"enable\": false\n        },\n        \"outMode\": \"out\",\n        \"random\": true,\n        \"speed\": 1,\n        \"straight\": false,\n        \"trail\": {\n          \"enable\": false,\n          \"length\": 10,\n          \"fillColor\": {\n            \"value\": \"#000000\"\n          }\n        },\n        \"vibrate\": false,\n        \"warp\": false\n      },\n      \"number\": {\n        \"density\": {\n          \"enable\": true,\n          \"area\": 800,\n          \"factor\": 1000\n        },\n        \"limit\": 0,\n        \"value\": 160\n      },\n      \"opacity\": {\n        \"animation\": {\n          \"enable\": true,\n          \"minimumValue\": 0,\n          \"speed\": 1,\n          \"sync\": false\n        },\n        \"random\": {\n          \"enable\": true,\n          \"minimumValue\": 1\n        },\n        \"value\": 1\n      },\n      \"rotate\": {\n        \"animation\": {\n          \"enable\": false,\n          \"speed\": 0,\n          \"sync\": false\n        },\n        \"direction\": \"clockwise\",\n        \"path\": false,\n        \"random\": false,\n        \"value\": 0\n      },\n      \"shadow\": {\n        \"blur\": 0,\n        \"color\": {\n          \"value\": \"#000000\"\n        },\n        \"enable\": false,\n        \"offset\": {\n          \"x\": 0,\n          \"y\": 0\n        }\n      },\n      \"shape\": {\n        \"options\": {\n          \"polygon\": {\n            \"nb_sides\": 5\n          },\n          \"star\": {\n            \"nb_sides\": 5\n          }          \n        },\n        \"type\": \"circle\"\n      },\n      \"size\": {\n        \"animation\": {\n          \"destroy\": \"none\",\n          \"enable\": false,\n          \"minimumValue\": 0.3,\n          \"speed\": 4,\n          \"startValue\": \"max\",\n          \"sync\": false\n        },\n        \"random\": {\n          \"enable\": true,\n          \"minimumValue\": 1\n        },\n        \"value\": 3\n      },\n      \"stroke\": {\n        \"width\": 0,\n        \"color\": {\n          \"value\": \"#000000\",\n          \"animation\": {\n            \"enable\": false,\n            \"speed\": 1,\n            \"sync\": true\n          }\n        }\n      },\n      \"twinkle\": {\n        \"lines\": {\n          \"enable\": false,\n          \"frequency\": 0.05,\n          \"opacity\": 1\n        },\n        \"particles\": {\n          \"enable\": false,\n          \"frequency\": 0.05,\n          \"opacity\": 1\n        }\n      }\n    },\n    \"pauseOnBlur\": true\n  }\n\nexport const covidConfig = {\n  name: \"COVID-19\",\n  \"background\": {\n    \"color\": {\n      \"value\": \"\"\n    },\n    \"image\": \"\",\n    \"position\": \"\",\n    \"repeat\": \"\",\n    \"size\": \"\",\n    \"opacity\": 1\n  },\n  \"backgroundMask\": {\n    \"cover\": {\n      \"color\": {\n        \"value\": \"#fff\"\n      },\n      \"opacity\": 1\n    },\n    \"enable\": false\n  },\n  \"detectRetina\": true,\n  \"fpsLimit\": 60,\n  \"infection\": {\n    \"cure\": false,\n    \"delay\": 0,\n    \"enable\": false,\n    \"infections\": 0,\n    \"stages\": []\n  },\n  \"interactivity\": {\n    \"detectsOn\": \"canvas\",\n    \"events\": {\n      \"onClick\": {\n        \"enable\": true,\n        \"mode\": \"push\"\n      },\n      \"onDiv\": {\n        \"ids\": [],\n        \"enable\": false,\n        \"mode\": [],\n        \"type\": \"circle\"\n      },\n      \"onHover\": {\n        \"enable\": true,\n        \"mode\": \"bubble\",\n        \"parallax\": {\n          \"enable\": false,\n          \"force\": 60,\n          \"smooth\": 10\n        }\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"attract\": {\n        \"distance\": 200,\n        \"duration\": 0.4,\n        \"speed\": 1\n      },\n      \"bubble\": {\n        \"distance\": 400,\n        \"duration\": 2,\n        \"opacity\": 1,\n        \"size\": 40\n      },\n      \"connect\": {\n        \"distance\": 80,\n        \"links\": {\n          \"opacity\": 0.5\n        },\n        \"radius\": 60\n      },\n      \"grab\": {\n        \"distance\": 400,\n        \"links\": {\n          \"opacity\": 1\n        }\n      },\n      \"push\": {\n        \"quantity\": 4\n      },\n      \"remove\": {\n        \"quantity\": 2\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.4,\n        \"speed\": 1\n      },\n      \"slow\": {\n        \"factor\": 3,\n        \"radius\": 200\n      },\n      \"trail\": {\n        \"delay\": 1,\n        \"quantity\": 1\n      }\n    }\n  },\n  \"particles\": {\n    \"collisions\": {\n      \"enable\": false,\n      \"mode\": \"bounce\"\n    },\n    \"color\": {\n      \"value\": \"#ffffff\",\n      \"animation\": {\n        \"enable\": false,\n        \"speed\": 1,\n        \"sync\": true\n      }\n    },\n    \"links\": {\n      \"blink\": false,\n      \"color\": {\n        \"value\": \"#323031\"\n      },\n      \"consent\": false,\n      \"distance\": 150,\n      \"enable\": false,\n      \"opacity\": 0.4,\n      \"shadow\": {\n        \"blur\": 5,\n        \"color\": {\n          \"value\": \"#00ff00\"\n        },\n        \"enable\": false\n      },\n      \"triangles\": {\n        \"enable\": false\n      },\n      \"width\": 1,\n      \"warp\": false\n    },\n    \"move\": {\n      \"angle\": 90,\n      \"attract\": {\n        \"enable\": false,\n        \"rotate\": {\n          \"x\": 600,\n          \"y\": 1200\n        }\n      },\n      \"direction\": \"none\",\n      \"enable\": true,\n      \"noise\": {\n        \"delay\": {\n          \"random\": {\n            \"enable\": false,\n            \"minimumValue\": 0\n          },\n          \"value\": 0\n        },\n        \"enable\": false\n      },\n      \"outMode\": \"bounce\",\n      \"random\": false,\n      \"speed\": 6,\n      \"straight\": false,\n      \"trail\": {\n        \"enable\": false,\n        \"length\": 10,\n        \"fillColor\": {\n          \"value\": \"#000000\"\n        }\n      },\n      \"vibrate\": false,\n      \"warp\": false\n    },\n    \"number\": {\n      \"density\": {\n        \"enable\": true,\n        \"area\": 800,\n        \"factor\": 1000\n      },\n      \"limit\": 0,\n      \"value\": 170\n    },\n    \"opacity\": {\n      \"animation\": {\n        \"enable\": false,\n        \"minimumValue\": 0.1,\n        \"speed\": 1,\n        \"sync\": false\n      },\n      \"random\": {\n        \"enable\": false,\n        \"minimumValue\": 1\n      },\n      \"value\": 1\n    },\n    \"rotate\": {\n      \"animation\": {\n        \"enable\": false,\n        \"speed\": 0,\n        \"sync\": false\n      },\n      \"direction\": \"clockwise\",\n      \"path\": false,\n      \"random\": false,\n      \"value\": 0\n    },\n    \"shadow\": {\n      \"blur\": 0,\n      \"color\": {\n        \"value\": \"#000000\"\n      },\n      \"enable\": false,\n      \"offset\": {\n        \"x\": 0,\n        \"y\": 0\n      }\n    },\n    \"shape\": {\n      \"options\": {\n        \"character\": {\n          \"fill\": false,\n          \"font\": \"Verdana\",\n          \"style\": \"\",\n          \"value\": \"*\",\n          \"weight\": \"400\"\n        },\n        \"char\": {\n          \"fill\": false,\n          \"font\": \"Verdana\",\n          \"style\": \"\",\n          \"value\": \"*\",\n          \"weight\": \"400\"\n        },\n        \"polygon\": {\n          \"nb_sides\": 5\n        },\n        \"star\": {\n          \"nb_sides\": 5\n        },\n        \"image\": {\n          \"height\": 32,\n          \"replace_color\": true,\n          \"src\": \"https://cdn.matteobruni.it/images/particles/sars-cov-2.png\",\n          \"width\": 32\n        },\n        \"images\": {\n          \"height\": 32,\n          \"replace_color\": true,\n          \"src\": \"https://cdn.matteobruni.it/images/particles/sars-cov-2.png\",\n          \"width\": 32\n        }\n      },\n      \"type\": \"image\"\n    },\n    \"size\": {\n      \"animation\": {\n        \"destroy\": \"none\",\n        \"enable\": false,\n        \"minimumValue\": 0.1,\n        \"speed\": 40,\n        \"startValue\": \"max\",\n        \"sync\": false\n      },\n      \"random\": {\n        \"enable\": false,\n        \"minimumValue\": 1\n      },\n      \"value\": 16\n    },\n    \"stroke\": {\n      \"width\": 0,\n      \"color\": {\n        \"value\": \"#000000\",\n        \"animation\": {\n          \"enable\": false,\n          \"speed\": 1,\n          \"sync\": true\n        }\n      }\n    },\n    \"twinkle\": {\n      \"lines\": {\n        \"enable\": false,\n        \"frequency\": 0.05,\n        \"opacity\": 1\n      },\n      \"particles\": {\n        \"enable\": false,\n        \"frequency\": 0.05,\n        \"opacity\": 1\n      }\n    }\n  },\n  \"pauseOnBlur\": true\n}\n\nexport const spermConfig = {\n  name: \"Cum\",\n  \"background\": {\n    \"color\": {\n      \"value\": \"\"\n    },\n    \"image\": \"\",\n    \"position\": \"\",\n    \"repeat\": \"\",\n    \"size\": \"\",\n    \"opacity\": 1\n  },\n  \"backgroundMask\": {\n    \"cover\": {\n      \"color\": {\n        \"value\": \"#fff\"\n      },\n      \"opacity\": 1\n    },\n    \"enable\": false\n  },\n  \"detectRetina\": true,\n  \"fpsLimit\": 60,\n  \"infection\": {\n    \"cure\": false,\n    \"delay\": 0,\n    \"enable\": false,\n    \"infections\": 0,\n    \"stages\": []\n  },\n  \"interactivity\": {\n    \"detectsOn\": \"canvas\",\n    \"events\": {\n      \"onClick\": {\n        \"enable\": true,\n        \"mode\": \"push\"\n      },\n      \"onDiv\": {\n        \"ids\": [],\n        \"enable\": false,\n        \"mode\": [],\n        \"type\": \"circle\"\n      },\n      \"onHover\": {\n        \"enable\": true,\n        \"mode\": \"bubble\",\n        \"parallax\": {\n          \"enable\": false,\n          \"force\": 60,\n          \"smooth\": 10\n        }\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"attract\": {\n        \"distance\": 200,\n        \"duration\": 0.4,\n        \"speed\": 1\n      },\n      \"bubble\": {\n        \"distance\": 400,\n        \"duration\": 2,\n        \"opacity\": 1,\n        \"size\": 40\n      },\n      \"connect\": {\n        \"distance\": 80,\n        \"links\": {\n          \"opacity\": 0.5\n        },\n        \"radius\": 60\n      },\n      \"grab\": {\n        \"distance\": 400,\n        \"links\": {\n          \"opacity\": 1\n        }\n      },\n      \"push\": {\n        \"quantity\": 4\n      },\n      \"remove\": {\n        \"quantity\": 2\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.4,\n        \"speed\": 1\n      },\n      \"slow\": {\n        \"factor\": 3,\n        \"radius\": 200\n      },\n      \"trail\": {\n        \"delay\": 1,\n        \"quantity\": 1\n      }\n    }\n  },\n  \"particles\": {\n    \"collisions\": {\n      \"enable\": false,\n      \"mode\": \"bounce\"\n    },\n    \"color\": {\n      \"value\": \"#ffffff\",\n      \"animation\": {\n        \"enable\": false,\n        \"speed\": 1,\n        \"sync\": true\n      }\n    },\n    \"links\": {\n      \"blink\": false,\n      \"color\": {\n        \"value\": \"#323031\"\n      },\n      \"consent\": false,\n      \"distance\": 150,\n      \"enable\": false,\n      \"opacity\": 0.4,\n      \"shadow\": {\n        \"blur\": 5,\n        \"color\": {\n          \"value\": \"#00ff00\"\n        },\n        \"enable\": false\n      },\n      \"triangles\": {\n        \"enable\": false\n      },\n      \"width\": 1,\n      \"warp\": false\n    },\n    \"move\": {\n      \"angle\": 90,\n      \"attract\": {\n        \"enable\": false,\n        \"rotate\": {\n          \"x\": 600,\n          \"y\": 1200\n        }\n      },\n      \"direction\": \"none\",\n      \"enable\": true,\n      \"noise\": {\n        \"delay\": {\n          \"random\": {\n            \"enable\": false,\n            \"minimumValue\": 0\n          },\n          \"value\": 0\n        },\n        \"enable\": false\n      },\n      \"outMode\": \"bounce\",\n      \"random\": false,\n      \"speed\": 6,\n      \"straight\": false,\n      \"trail\": {\n        \"enable\": false,\n        \"length\": 10,\n        \"fillColor\": {\n          \"value\": \"#000000\"\n        }\n      },\n      \"vibrate\": false,\n      \"warp\": false\n    },\n    \"number\": {\n      \"density\": {\n        \"enable\": true,\n        \"area\": 800,\n        \"factor\": 1000\n      },\n      \"limit\": 0,\n      \"value\": 170\n    },\n    \"opacity\": {\n      \"animation\": {\n        \"enable\": false,\n        \"minimumValue\": 0.1,\n        \"speed\": 1,\n        \"sync\": false\n      },\n      \"random\": {\n        \"enable\": false,\n        \"minimumValue\": 1\n      },\n      \"value\": 1\n    },\n    \"rotate\": {\n      \"animation\": {\n        \"enable\": false,\n        \"speed\": 0,\n        \"sync\": false\n      },\n      \"direction\": \"clockwise\",\n      \"path\": false,\n      \"random\": false,\n      \"value\": 0\n    },\n    \"shadow\": {\n      \"blur\": 0,\n      \"color\": {\n        \"value\": \"#000000\"\n      },\n      \"enable\": false,\n      \"offset\": {\n        \"x\": 0,\n        \"y\": 0\n      }\n    },\n    \"shape\": {\n      \"options\": {\n        \"character\": {\n          \"fill\": false,\n          \"font\": \"Verdana\",\n          \"style\": \"\",\n          \"value\": \"*\",\n          \"weight\": \"400\"\n        },\n        \"char\": {\n          \"fill\": false,\n          \"font\": \"Verdana\",\n          \"style\": \"\",\n          \"value\": \"*\",\n          \"weight\": \"400\"\n        },\n        \"polygon\": {\n          \"nb_sides\": 5\n        },\n        \"star\": {\n          \"nb_sides\": 5\n        },\n        \"image\": {\n          \"height\": 32,\n          \"replace_color\": true,\n          \"src\": \"https://iili.io/FnAVCQ.md.png\",\n          \"width\": 32\n        },\n        \"images\": {\n          \"height\": 32,\n          \"replace_color\": true,\n          \"src\": \"https://iili.io/FnAVCQ.md.png\",\n          \"width\": 32\n        }\n      },\n      \"type\": \"image\"\n    },\n    \"size\": {\n      \"animation\": {\n        \"destroy\": \"none\",\n        \"enable\": false,\n        \"minimumValue\": 0.1,\n        \"speed\": 40,\n        \"startValue\": \"max\",\n        \"sync\": false\n      },\n      \"random\": {\n        \"enable\": false,\n        \"minimumValue\": 1\n      },\n      \"value\": 16\n    },\n    \"stroke\": {\n      \"width\": 0,\n      \"color\": {\n        \"value\": \"#000000\",\n        \"animation\": {\n          \"enable\": false,\n          \"speed\": 1,\n          \"sync\": true\n        }\n      }\n    },\n    \"twinkle\": {\n      \"lines\": {\n        \"enable\": false,\n        \"frequency\": 0.05,\n        \"opacity\": 1\n      },\n      \"particles\": {\n        \"enable\": false,\n        \"frequency\": 0.05,\n        \"opacity\": 1\n      }\n    }\n  },\n  \"pauseOnBlur\": true\n}\n\nexport const cummersConfig = {\n  name: \"Cummers\",\n  \"background\": {\n    \"color\": {\n      \"value\": \"\"\n    },\n    \"image\": \"\",\n    \"position\": \"\",\n    \"repeat\": \"\",\n    \"size\": \"\",\n    \"opacity\": 1\n  },\n  \"backgroundMask\": {\n    \"cover\": {\n      \"color\": {\n        \"value\": \"#fff\"\n      },\n      \"opacity\": 1\n    },\n    \"enable\": false\n  },\n  \"detectRetina\": true,\n  \"fpsLimit\": 60,\n  \"infection\": {\n    \"cure\": false,\n    \"delay\": 0,\n    \"enable\": false,\n    \"infections\": 0,\n    \"stages\": []\n  },\n  \"interactivity\": {\n    \"detectsOn\": \"canvas\",\n    \"events\": {\n      \"onClick\": {\n        \"enable\": true,\n        \"mode\": \"push\"\n      },\n      \"onDiv\": {\n        \"ids\": [],\n        \"enable\": false,\n        \"mode\": [],\n        \"type\": \"circle\"\n      },\n      \"onHover\": {\n        \"enable\": true,\n        \"mode\": \"bubble\",\n        \"parallax\": {\n          \"enable\": false,\n          \"force\": 60,\n          \"smooth\": 10\n        }\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"attract\": {\n        \"distance\": 200,\n        \"duration\": 0.4,\n        \"speed\": 1\n      },\n      \"bubble\": {\n        \"distance\": 400,\n        \"duration\": 2,\n        \"opacity\": 1,\n        \"size\": 40\n      },\n      \"connect\": {\n        \"distance\": 80,\n        \"links\": {\n          \"opacity\": 0.5\n        },\n        \"radius\": 60\n      },\n      \"grab\": {\n        \"distance\": 400,\n        \"links\": {\n          \"opacity\": 1\n        }\n      },\n      \"push\": {\n        \"quantity\": 4\n      },\n      \"remove\": {\n        \"quantity\": 2\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.4,\n        \"speed\": 1\n      },\n      \"slow\": {\n        \"factor\": 3,\n        \"radius\": 200\n      },\n      \"trail\": {\n        \"delay\": 1,\n        \"quantity\": 1\n      }\n    }\n  },\n  \"particles\": {\n    \"collisions\": {\n      \"enable\": false,\n      \"mode\": \"bounce\"\n    },\n    \"color\": {\n      \"value\": \"#ffffff\",\n      \"animation\": {\n        \"enable\": false,\n        \"speed\": 1,\n        \"sync\": true\n      }\n    },\n    \"links\": {\n      \"blink\": false,\n      \"color\": {\n        \"value\": \"#323031\"\n      },\n      \"consent\": false,\n      \"distance\": 150,\n      \"enable\": false,\n      \"opacity\": 0.4,\n      \"shadow\": {\n        \"blur\": 5,\n        \"color\": {\n          \"value\": \"#00ff00\"\n        },\n        \"enable\": false\n      },\n      \"triangles\": {\n        \"enable\": false\n      },\n      \"width\": 1,\n      \"warp\": false\n    },\n    \"move\": {\n      \"angle\": 90,\n      \"attract\": {\n        \"enable\": false,\n        \"rotate\": {\n          \"x\": 600,\n          \"y\": 1200\n        }\n      },\n      \"direction\": \"none\",\n      \"enable\": true,\n      \"noise\": {\n        \"delay\": {\n          \"random\": {\n            \"enable\": false,\n            \"minimumValue\": 0\n          },\n          \"value\": 0\n        },\n        \"enable\": false\n      },\n      \"outMode\": \"bounce\",\n      \"random\": false,\n      \"speed\": 6,\n      \"straight\": false,\n      \"trail\": {\n        \"enable\": false,\n        \"length\": 10,\n        \"fillColor\": {\n          \"value\": \"#000000\"\n        }\n      },\n      \"vibrate\": false,\n      \"warp\": false\n    },\n    \"number\": {\n      \"density\": {\n        \"enable\": true,\n        \"area\": 800,\n        \"factor\": 1000\n      },\n      \"limit\": 0,\n      \"value\": 170\n    },\n    \"opacity\": {\n      \"animation\": {\n        \"enable\": false,\n        \"minimumValue\": 0.1,\n        \"speed\": 1,\n        \"sync\": false\n      },\n      \"random\": {\n        \"enable\": false,\n        \"minimumValue\": 1\n      },\n      \"value\": 1\n    },\n    \"rotate\": {\n      \"animation\": {\n        \"enable\": false,\n        \"speed\": 0,\n        \"sync\": false\n      },\n      \"direction\": \"clockwise\",\n      \"path\": false,\n      \"random\": false,\n      \"value\": 0\n    },\n    \"shadow\": {\n      \"blur\": 0,\n      \"color\": {\n        \"value\": \"#000000\"\n      },\n      \"enable\": false,\n      \"offset\": {\n        \"x\": 0,\n        \"y\": 0\n      }\n    },\n    \"shape\": {\n      \"options\": {\n        \"character\": {\n          \"fill\": false,\n          \"font\": \"Verdana\",\n          \"style\": \"\",\n          \"value\": \"*\",\n          \"weight\": \"400\"\n        },\n        \"char\": {\n          \"fill\": false,\n          \"font\": \"Verdana\",\n          \"style\": \"\",\n          \"value\": \"*\",\n          \"weight\": \"400\"\n        },\n        \"polygon\": {\n          \"nb_sides\": 5\n        },\n        \"star\": {\n          \"nb_sides\": 5\n        },\n        \"image\": {\n          \"height\": 32,\n          \"replace_color\": true,\n          \"src\": \"https://iili.io/3J35np.png\",\n          \"width\": 32\n        },\n        \"images\": {\n          \"height\": 32,\n          \"replace_color\": true,\n          \"src\": \"https://iili.io/3J35np.png\",\n          \"width\": 32\n        }\n      },\n      \"type\": \"image\"\n    },\n    \"size\": {\n      \"animation\": {\n        \"destroy\": \"none\",\n        \"enable\": false,\n        \"minimumValue\": 0.1,\n        \"speed\": 40,\n        \"startValue\": \"max\",\n        \"sync\": false\n      },\n      \"random\": {\n        \"enable\": false,\n        \"minimumValue\": 1\n      },\n      \"value\": 16\n    },\n    \"stroke\": {\n      \"width\": 0,\n      \"color\": {\n        \"value\": \"#000000\",\n        \"animation\": {\n          \"enable\": false,\n          \"speed\": 1,\n          \"sync\": true\n        }\n      }\n    },\n    \"twinkle\": {\n      \"lines\": {\n        \"enable\": false,\n        \"frequency\": 0.05,\n        \"opacity\": 1\n      },\n      \"particles\": {\n        \"enable\": false,\n        \"frequency\": 0.05,\n        \"opacity\": 1\n      }\n    }\n  },\n  \"pauseOnBlur\": true\n}","import React, { Component } from 'react'\nimport * as particles from \"../../data/particlesConfig\"\nimport \"../../Bulma.sass\"\n\nimport Select from 'react-select' \n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class particlesSettings extends Component {\n    state = {\n        collapsed: true,\n        config: particles.defaultParticlesConfig        \n    }\n\n    handleChange = (value) => {\n        this.setState({config: value.config, name: value.label}, () => this.props.updateParticles(this.state.config, this.state.name))\n    }\n\n    render() {\n        const options = [\n            { value: 'none', label: 'None', config: null },\n            { value: 'snow', label: 'Snow', config: particles.defaultParticlesConfig },\n            { value: 'stars', label: 'Stars', config: particles.starsConfig},\n            { value: 'covid', label: 'COVID-19', config: particles.covidConfig }            \n          ]\n          const styles = {\n            width: \"auto\",\n            marginLeft: \"75%\",\n            marginTop: \"-1%\"\n          }\n        return (\n            <div style={styles}>\n                <Select options={options} placeholder=\"Set Particles\" onChange={this.handleChange}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ReloadImage from \"./headerComponents/ReloadImage\"\nimport ParticlesSettings from \"./headerComponents/ParticlesSettings\"\n\nexport default class Header extends Component {\n    updateImage = (mapsURL, gMapsURL, region, country) => {\n        this.props.newImage(mapsURL, gMapsURL, region, country)\n    }\n\n    updateParticles = (config, name) => {\n        this.props.newParticles(config, name)\n    }\n\n    render() {\n        const noPadding = {\n            paddingBottom: \"0px\",\n            paddingTop: \"0px\",\n            paddingRight: \"1%\",\n            paddingLeft: \"1%\",\n\n            marginBottom: \"0px\",            \n        }        \n\n        return (                      \n            <div className=\"columns\">\n                <div className=\"column\" >\n                    <h1 className=\"title is-3\" style={{paddingLeft: \"0.5%\", paddingTop: \"0.5%\"}}>Earth View Improved</h1>\n                </div>\n                \n                <div className=\"column\">\n                    <ReloadImage newImage={this.updateImage}/>\n                    <ParticlesSettings updateParticles={this.updateParticles}/>                    \n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport \"../../Bulma.sass\"\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport randomMap from '../../data/randomMap'\n\nclass MapInfo extends Component {\n\n    render() {\n        let region = \"\"\n        if(this.props.region === \"-\"){\n            region = \"\"\n        }        \n        else{\n            region = this.props.region + \",\"\n        }\n        return (\n            <p class=\"buttons is-right\">\n                <a className=\"button is-right\" href={this.props.gMapsURL}>\n                    Visit {`${region} ${this.props.country}`} on Google Maps\n                    <span className=\"icon\" style={{marginLeft: \"0.5%\"}}>\n                        <FontAwesomeIcon icon={faMapMarkerAlt}/>\n                    </span>\n                </a>\n            </p>\n        );\n    }\n}\n\nexport default MapInfo;","import React, { Component } from 'react'\nimport '../../Bulma.sass'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\n\nexport default class Sripushkar extends Component {\n    render() {\n        return (           \n            <a href=\"https://github.com/sripushkar\">\n                Created by Sripuhkar Julapally\n                <FontAwesomeIcon icon={faGithub} style={{marginLeft: \"0.5%\"}}/>\n            </a>                \n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport MapInfo from \"./footerComponents/MapInfo\"\nimport Sripushkar from \"./footerComponents/Sripushkar\"\n\nimport \"../Bulma.sass\"\n\nexport default class Footer extends Component {\n    render() {\n        const noPadding = {\n            paddingBottom: \"0px\",\n            paddingTop: \"0px\",\n            paddingRight: \"0.5%\",\n            paddingLeft: \"0.5%\",\n\n            marginBottom: \"0px\",\n            \n        }\n\n\n        return (          \n            <div className=\"columns\" style={noPadding}>\n                <div className=\"column\" style={noPadding}>\n                  <Sripushkar/>\n                </div>\n                \n\n                <div className=\"column\" style={noPadding}>\n                  <MapInfo gMapsURL = {this.props.gMapsURL} region = {this.props.region} country = {this.props.country}/>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Weather extends Component {\n    state = {\n        latitude: null,\n        longitude: null,\n        weather: {}\n      }\n    componentDidMount() {\n        const options = {\n            enableHighAccuracy: false,\n            timeout: 5000,\n            maximumAge: 2000\n          };\n\n        navigator.geolocation.getCurrentPosition(position => {\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n            this.setState({latitude: position.coords.latitude, longitude: position.coords.longitude})\n\n            const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n            fetch(weatherUrl)\n                .then(response => response.json())\n                    .then(data => {\n                        this.setState({\n                            weather: {\n                                city: data.name || \"city\",\n                                forecast: data.weather[0].main,                                \n                                description: data.weather[0].description || \"description\",\n                                iconUrl: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\n                                temperature: this.kelvinToFahrenheit(data.main.temp) || 0,\n                                minTemperature: this.kelvinToFahrenheit(data.main.temp_min) || 0,\n                                maxTemperature: this.kelvinToFahrenheit(data.main.temp_max) || 0,\n                                precipitation: data.weather[0].main === \"Rain\" ? data[\"rain\"][\"1h\"] : 0,\n                                humidity: data.main.humidity\n                            }\n                        })\n                    }) \n                .catch(error => console.log(error))\n            console.log(\"Called API\")\n        }, error => {\n            console.log(error)    \n        }, options);\n    }\n\n    kelvinToFahrenheit = temp => Math.round(temp * 1.8 - 459.67)\n\n    //Fetches weather data from API\n    componentDidUpdate(){\n    }\n\n    render() {\n        \n        return (\n            <div className=\"card\">\n                <header className=\"card-header\">\n                    <p className=\"card-header-title\">Weather in {this.state.weather.city}</p>\n                </header>\n                <div className=\"card-content\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <img src={this.state.weather.iconUrl} alt=\"Weather Icon\"/>\n                        </div>\n                        <div className=\"media-content\">\n                            <p className=\"title is-4\" style={{color: \"hsl(217, 71%, 53%)\"}}>{this.state.weather.temperature}°</p>\n                            {/* <p class=\"title is-4\" style={{color: \"hsl(217, 71%, 53%)\"}}>{this.state.weather.forecast}</p> */}\n                            <p className=\"subtitle is-6\">{this.state.weather.forecast}</p>\n                        </div>                        \n                    </div>\n                    <div className=\"content\">\n                            <p>Precipitation: {this.state.weather.precipitation}%</p>\n                            <p>Humidity: {this.state.weather.humidity}%</p>\n                        </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport '../index.css'\nimport '../Bulma.sass'\n\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\nimport Weather from \"./Weather\"\n\nimport randomMap from '../data/randomMap'\nimport * as particles from \"../data/particlesConfig\"\nimport Particles from 'react-particles-js';\n\nclass App extends Component {\n\n  state = {\n    oldURL: randomMap[\"Image URL\"],\n    mapURL: randomMap[\"Image URL\"],\n    gMapsURL: randomMap[\"Google Maps URL\"],\n    region: randomMap[\"Region\"],\n    country: randomMap[\"Country\"],\n    particlesConfig: null,\n    particlesName: \"None\"\n  }\n  newImage = (newMapURL, gMapsURL, region, country) => this.setState({oldURL: this.state.mapURL, mapURL: newMapURL, gMapsURL, region, country})\n  changeParticles = (config, name) => this.setState({particlesConfig: config, particlesName: name})\n\n  render() {\n    \n    const bgStyles = {\n      backgroundImage: `url(${this.state.mapURL})`,\n      backgroundPosition: \"center center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      overflow: \"hidden\",\n    }\n\n    const particlesStyles = {\n        position:\"absolute\",\n        left:\"0\",\n        top:\"0\",\n        width:\"100%\",\n        height:\"100%\"\n    }\n\n    return (\n      <div>\n        <section className=\"hero is-fullheight\" style={bgStyles}> \n          {this.state.particlesConfig && <Particles params={this.state.particlesConfig} style={particlesStyles}/>}      \n          <Header newImage = {this.newImage} newParticles = {this.changeParticles}/>          \n          <div className=\"hero-body\">          \n            \n          </div>\n          <Footer gMapsURL = {this.state.gMapsURL} region = {this.state.region} country = {this.state.country}/>        \n        </section> \n        </div>           \n    );\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./Bulma.sass\"\nimport Background from \"./components/Background\";\n\nclass App extends Component {\n\n  render() {\n    return(\n      <div>\n        <Background/>       \n      </div>\n  )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n\nReactDOM.render(  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}